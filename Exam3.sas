* STAT 505 FINAL EXAM - Vignesh R;
*Question 1;
options ls=78;
title "STAT 505 - Final Exam";
data wolves;
infile 'X:\STAT 505\wolves.dat' delimiter='09'x;
input id $ location $ x1 x2 x3 x4 x5 x6 x7 x8 x9;
run;
* assessing normality;
proc glm data=wolves;
  class location;
  model x1 x2 x3 x4 x5 x6 x7 x8 x9 = location;
  output out=resids r=rx1 rx2 rx3 rx4 rx5 rx6 rx7 rx8 rx9;
  run; quit;
proc univariate noprint data=resids;
  histogram rx1 rx2 rx3 rx4 rx5 rx6 rx7 rx8 rx9;
  run;
  * Mahalanobis plot;
proc princomp data=wolves std noprint out=pcresult; 
  var x1 x2 x3 x4 x5 x6 x7 x8 x9;
  run;
data pcresult;
  set pcresult;
  dist2=uss(of prin1-prin9); *these are the squared statistial distances;
  run;
proc sort data=pcresult;
  by dist2;
  run;
data plotdata;
  set pcresult;
  prb=(_n_ -.5)/25; *25 is the sample size;
  chiquant=cinv(prb,9); *chisq quantiles for plotting;
  run;
symbol1 interpol=split;
value=dot;
proc gplot;
  plot dist2*chiquant;
  run; quit;
* Transformed x1, x3, and x9 to adjust for multivariate normality;
data wolves2;
set wolves;
x1 = x1**3;
x3 = x3**0.5;
x9 = x9**0.5;
run;
* assessing normality;
proc glm data=wolves2;
  class location;
  model x1 x2 x3 x4 x5 x6 x7 x8 x9 = location;
  output out=resids r=rx1 rx2 rx3 rx4 rx5 rx6 rx7 rx8 rx9;
  run; quit;
proc univariate noprint data=resids;
  histogram rx1 rx2 rx3 rx4 rx5 rx6 rx7 rx8 rx9;
  run;
* Mahalanobis plot;
proc princomp data=wolves2 std noprint out=pcresult; 
  var x1 x2 x3 x4 x5 x6 x7 x8 x9;
  run;
data pcresult;
  set pcresult;
  dist2=uss(of prin1-prin9); *these are the squared statistial distances;
  run;
proc sort data=pcresult;
  by dist2;
  run;
data plotdata;
  set pcresult;
  prb=(_n_ -.5)/25; *25 is the sample size;
  chiquant=cinv(prb,9); *chisq quantiles for plotting;
  run;
symbol1 interpol=split;
value=dot;
proc gplot;
  plot dist2*chiquant;
  run; quit;
* assessing constant covariance matrices;
proc discrim data=wolves2 pool=test;
  class location;
  var x1 x2 x3 x4 x5 x6 x7 x8 x9;
  run;
* Hotelling T-squared;
proc iml;
  start hotel2m;
    n1=nrow(w1);
    n2=nrow(w2);
    k=ncol(w1);
    one1=j(n1,1,1);
    one2=j(n2,1,1);
    ident1=i(n1);
    ident2=i(n2);
    ybar1=w1`*one1/n1;
    s1=w1`*(ident1-one1*one1`/n1)*w1/(n1-1.0);
    print n1 ybar1;
    print s1;
    ybar2=w2`*one2/n2;
    s2=w2`*(ident2-one2*one2`/n2)*w2/(n2-1.0);
    st=s1/n1+s2/n2;
    print n2 ybar2;
    print s2;
    t2=(ybar1-ybar2)`*inv(st)*(ybar1-ybar2);
    df1=k;
    p=1-probchi(t2,df1);
    print t2 df1 p;
    f=(n1+n2-k-1)*t2/k/(n1+n2-2);
    temp=((ybar1-ybar2)`*inv(st)*(s1/n1)*inv(st)*(ybar1-ybar2)/t2)**2/(n1-1);
    temp=temp+((ybar1-ybar2)`*inv(st)*(s2/n2)*inv(st)*(ybar1-ybar2)/t2)**2/(n2-1);
    df2=1/temp;
    p=1-probf(f,df1,df2);
    print f df1 df2 p;
finish;
  use wolves2;
    read all var{x1 x2 x3 x4 x5 x6 x7 x8 x9} where (location="rm") into w1;
    read all var{x1 x2 x3 x4 x5 x6 x7 x8 x9} where (location="ar") into w2;
  run hotel2m; quit;
* Simultaneous Confidence Intervals;
data rocky;
  set wolves2;
  if location="rm";
  variable="x1"; x=x1; output;
  variable="x2"; x=x2; output;
  variable="x3"; x=x3; output;
  variable="x4"; x=x4; output;
  variable="x5"; x=x5; output;
  variable="x6"; x=x6; output;
  variable="x7"; x=x7; output;
  variable="x8"; x=x8; output;
  variable="x9"; x=x9; output;
  keep location variable x;
  run;
proc sort;
  by variable;
  run;
proc means noprint;
  by variable;
  id location;
  var x;
  output out=pop1 n=n1 mean=xbar1 var=s21;
  run;
data arctic;
  set wolves2;
  if location="ar";
  variable="x1"; x=x1; output;
  variable="x2"; x=x2; output;
  variable="x3"; x=x3; output;
  variable="x4"; x=x4; output;
  variable="x5"; x=x5; output;
  variable="x6"; x=x6; output;
  variable="x7"; x=x7; output;
  variable="x8"; x=x8; output;
  variable="x9"; x=x9; output;
  keep location variable x;
  run;
proc sort;
  by variable;
  run;
proc means noprint;
  by variable;
  id location;
  var x;
  output out=pop2 n=n2 mean=xbar2 var=s22;
  run;
data combine;
  merge pop1 pop2;
  by variable;
  f=finv(0.95,9,n1+n2-9-1);
  sp=(s21/n1+s22/n2);
  losim=xbar1-xbar2-sqrt(9*(n1+n2-2)*f*(1/n1+1/n2)*sp/(n1+n2-9-1));
  upsim=xbar1-xbar2+sqrt(9*(n1+n2-2)*f*(1/n1+1/n2)*sp/(n1+n2-9-1));
  run;
proc print;
run; quit;
* Question 2;
options ls=78;
title "STAT 505 - Final Exam";
data wolves;
infile 'X:\STAT 505\wolves.dat' delimiter='09'x;
input id location $ x1 x2 x3 x4 x5 x6 x7 x8 x9;
run;
proc sort data=wolves;
by id;
run;
* Ward's Methods with 2 clusters;
proc cluster data=wolves method=ward outtree=clust1;
var x1 x2 x3 x4 x5 x6 x7 x8 x9;
id id;
run;
proc tree horizontal nclusters=2 out=clust2;
id id;
run;
proc sort;
by id;
run;
data combine;
merge wolves clust2;
by id;
run;
proc glm;
class cluster;
model x1 x2 x3 x4 x5 x6 x7 x8 x9 = cluster;
means cluster;
run; quit;
* Question 4;
options ls=78;
title "STAT 505 - Final Exam";
data wolves;
infile 'X:\STAT 505\wolves.dat' delimiter='09'x;
input id location $ x1 x2 x3 x4 x5 x6 x7 x8 x9;
run;
proc princomp data=wolves;
  var x1 x2 x3 x4 x5 x6 x7 x8 x9;
  run; quit;
